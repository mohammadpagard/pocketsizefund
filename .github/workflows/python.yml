name: Python CI

on:
  pull_request:
    branches:
      - master

jobs:
  run_unit_tests:
    name: Run Python unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup Mise
        env:
          RUST_BACKTRACE: full
        uses: jdx/mise-action@v2
        with:
          install: true
          install_args: "-y"
          experimental: true
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Poetry
        run: |
          set -xe
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-dev
      - name: Run unit tests
        run: mise run python:test
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: coverage.xml

  run_lint:
    name: Run Python lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Run lint
        run: mise run python:lint

  run_dead_code:
    name: Run Python dead code check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Run dead code
        run: mise run python:dead-code

  # publish_package:
  #   name: Publish Python package to PyPI
  #   runs-on: ubuntu-latest
  #   needs:
  #   - run_unit_tests
  #   - run_lint
  #   - run_dead_code
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #     - name: Setup mise
  #       uses: jdx/mise-action@v2
  #       with:
  #         experimental: true
  #     - name: Install poetry
  #       uses: snok/install-poetry@v1
  #     - name: Run dead code
  #       run: mise run libraries:python:publish
